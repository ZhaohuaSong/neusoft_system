#!/usr/bin/env python
# -*- coding: utf-8 -*-
# @Time    : 2016/12/26 下午6:00
# @Author  : czw@rich-f.com
# @Site    :
# @File    : test1.py
# @Software: PyCharm
# @Function:

import json

class DbTreeenode():

    def __int__(self, name=None, text=None, type=None,children=None):
        self.name=name
        self.text=text
        self.type=type
        self.children=children

    def dict(self):
        return {self.name:{'text':self.text,'type':self.type},}

class TreeRespVO:
    data = object

    def __init__(self, data=None):
        self.data = data

    def setData(self, parm):
        self.data = parm

if __name__ == '__main__':

    data =  [(2837, 'MySQL', '1', 'dbtype', u'MySQL', None, 'czw', None, None, None, None, ''), (2838, 'Oracle', '2', 'dbtype', 'Oracle', None, 'czw', None, None, None, None, ''), (2839, 'MS SQLSERVER', '3', 'dbtype', 'MS SQLSERVER', None, 'czw', None, None, None, None, '')]  # list对象
    print "DATA:", repr(data)

    vo=TreeRespVO()

    for l in data:

        print l
        #dbtreenode=DbTreeenode()
        #dbtreenode.name=l
        #dbtreenode.text=l['dict_name']
        #dbtreenode.type='item'
        #vo.setData(dbtreenode)


    data_string = json.dumps(vo)
    print "JSON:", data_string
