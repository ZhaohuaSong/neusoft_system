jQuery(function ($) {
//
// Pipelining function for DataTables. To be used to the `ajax` option of DataTable
// Qiailin 管道式分页加载数据，减少ajax请求
//

    $.fn.dataTable.pipeline = function (opts) {
        // Configuration options
        var conf = $.extend({
            pages: 5,     // number of pages to cache 缓存页面数量
            url: '',      // script url  脚本url
            data: null,   // function or object with parameters to send to the server
                          // matching how `ajax.data` works in DataTables
            method: 'GET' // Ajax HTTP method type
        }, opts);

        // Private variables for storing the cache
        var cacheLower = -1;
        var cacheUpper = null;
        var cacheLastRequest = null;
        var cacheLastJson = null;

        return function (request, drawCallback, settings) {
            var ajax = false;
            var requestStart = request.start;
            var drawStart = request.start;
            var requestLength = request.length;
            var requestEnd = requestStart + requestLength;

            if (settings.clearCache) {
                // API requested that the cache be cleared
                // 注册
                ajax = true;
                settings.clearCache = false;
            }
            else if (cacheLower < 0 || requestStart < cacheLower || requestEnd > cacheUpper) {
                // outside cached data - need to make a request
                ajax = true;
            }
            else if (JSON.stringify(request.order) !== JSON.stringify(cacheLastRequest.order) ||
                JSON.stringify(request.columns) !== JSON.stringify(cacheLastRequest.columns) ||
                JSON.stringify(request.search) !== JSON.stringify(cacheLastRequest.search)
            ) {
                // properties changed (ordering, columns, searching)
                ajax = true;
            }
            // Store the request for checking next time around
            cacheLastRequest = $.extend(true, {}, request);

            if (ajax) {
                // Need data from the server
                if (requestStart < cacheLower) {
                    requestStart = requestStart - (requestLength * (conf.pages - 1));

                    if (requestStart < 0) {
                        requestStart = 0;
                    }
                }
                cacheLower = requestStart;
                cacheUpper = requestStart + (requestLength * conf.pages);

                request.start = requestStart;
                request.length = requestLength * conf.pages;

                // Provide the same `data` options as DataTables.
                if ($.isFunction(conf.data)) {
                    // As a function it is executed with the data object as an arg
                    // for manipulation. If an object is returned, it is used as the
                    // data object to submit
                    var d = conf.data(request);
                    if (d) {
                        $.extend(request, d);
                    }
                }
                else if ($.isPlainObject(conf.data)) {
                    // As an object, the data given extends the default
                    $.extend(request, conf.data);
                }

                settings.jqXHR = $.ajax({
                    "type": conf.method,
                    "url": conf.url,
                    "data": request,
                    "dataType": "json",
                    "cache": false,
                    "success": function (json) {
                        cacheLastJson = $.extend(true, {}, json);

                        if (cacheLower != drawStart) {
                            json.data.splice(0, drawStart - cacheLower);
                        }
                        if (requestLength >= -1) {
                            json.data.splice(requestLength, json.data.length);
                        }

                        drawCallback(json);
                    }
                });
            }
            else {
                json = $.extend(true, {}, cacheLastJson);
                json.draw = request.draw; // Update the echo for each response
                json.data.splice(0, requestStart - cacheLower);
                json.data.splice(requestLength, json.data.length);

                drawCallback(json);
            }
        }
    };

// Register an API method that will empty the pipelined data, forcing an Ajax
// fetch on the next draw (i.e. `table.clearPipeline().draw()`)
//    Qiailin
// 给datables 注册一个API方法，将空的数据，强制让Ajax 取下往上
//（即`表。clearpipeline()。draw() `）
    $.fn.dataTable.Api.register('clearPipeline()', function () {
        return this.iterator('table', function (settings) {
            settings.clearCache = true;
        });
    });

//
// DataTables initialisation
// Qiailin Datatables 初始化页面 关键绑定 ID (dynamic-table)
	//$("#dynamic-table").dataTable().fnDestroy();
    var pospDataTable = $('#dynamic-table').DataTable({
			//"bDestroy": true,
            "processing": true,
            "serverSide": true,
            "searching": true,
            "order": [[1, "asc"]], //默认排序从第几行
            "autoWidth": false,
            "ajax": {
                "url": DETAIL_LIST_URL,
                "type": "POST",
            },
            lengthMenu: [ // 最多查询数量限制 50
                [10, 25, 50],
                ['10', '25', '50']
            ],
            columnDefs: [ // 设置第二列居中
                {
                    orderable: true,
                    searchable: true,
                    className: "center",
                    targets: [1]
                },
            ],
            "language": {
                "processing": "进度君正在努力的加载.... "
            },
            //

            //
            "fnDrawCallback": function () {
                var api = this.api();
                var startIndex = api.context[0]._iDisplayStart;
                api.column(1).nodes().each(function (cell, i) {
                    cell.innerHTML = startIndex + i + 1;
                });
                buttonsDisable(); //禁用新增、删除
            }
            ,
            "aoColumns": [
                {
                    "sClass": "text-center",
                    "data": "id",
                    "render": function (data, type, full, meta) {
                        return '<label class="pos-rel"> <input type="checkbox" value="' + data + '" class="ace" /> <span class="lbl"></span> </label> '
                    },
                    "bSortable": false
                },
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
            ],
            //"dom": '<lf<t>ip>'  , //清除表格头部、底部 样式
            select: { //多行选择
                style: 'multi'
            }
        })
        ;

    // 禁用 修改 、删除
    // Qiailin
    function buttonsDisable() {
        $("#btn-update").attr("disabled", 'disabled');
        $("#btn-delete").attr("disabled", 'disabled');
    }

    // 启用 修改 、删除
    // Qiailin
    function buttonsEnable() {
        $("#btn-update").removeAttr("disabled");
        $("#btn-delete").removeAttr("disabled");
    }


    // 新增、删除按钮启用、禁用的监听事件
    //Qiailin
    pospDataTable.on('click', 'tr', function () {
        //$(this).toggleClass('selected');
        var datas = pospDataTable.rows('.selected').data()
        //if (datas.length > 0) {
        //    buttonsEnable()
        //} else {
        //    buttonsDisable()
        //}
        if (datas.length < 0) {
            buttonsDisable()
        }
        else {
            buttonsEnable()
        }
    });


    /////////////////////////////////
    // datatools
    $.fn.dataTable.Buttons.defaults.dom.container.className = 'dt-buttons btn-overlap btn-group btn-overlap';

    new $.fn.dataTable.Buttons(pospDataTable, {
        buttons: [
            {
                "extend": "colvis",
                "text": "<i class='fa fa-search bigger-110 blue'></i> <span class='hidden'>Show/hide columns</span>",
                "className": "btn btn-white btn-primary btn-bold",
            },
            {
                "extend": "copy",
                "text": "<i class='fa fa-copy bigger-110 pink'></i> <span class='hidden'>Copy to clipboard</span>",
                "className": "btn btn-white btn-primary btn-bold"
            },
            {
                "extend": "csv",
                "text": "<i class='fa fa-database bigger-110 orange'></i> <span class='hidden'>Export to CSV</span>",
                "className": "btn btn-white btn-primary btn-bold"
            },
            {
                "extend": "excel",
                "text": "<i class='fa fa-file-excel-o bigger-110 green'></i> <span class='hidden'>Export to Excel</span>",
                "className": "btn btn-white btn-primary btn-bold"
            },
            //{
            //    "extend": "pdf",
            //    "text": "<i class='fa fa-file-pdf-o bigger-110 red'></i> <span class='hidden'>Export to PDF</span>",
            //    "className": "btn btn-white btn-primary btn-bold"
            //},
            {
                "extend": "print",
                "text": "<i class='fa fa-print bigger-110 grey'></i> <span class='hidden'>Print</span>",
                "className": "btn btn-white btn-primary btn-bold",
                autoPrint: false,
                message: 'This print was produced using the Print button for DataTables'
            }
        ]
    });

    //setTimeout(function () {
    //    $($('.tableTools-container')).find('a.dt-button').each(function () {
    //        var div = $(this).find(' > div').first();
    //        if (div.length == 1) div.tooltip({container: 'body', title: div.parent().text()});
    //        else $(this).tooltip({container: 'body', title: $(this).text()});
    //    });
    //}, 500);

    pospDataTable.buttons().container().appendTo($('.tableTools-container'));

    //style the message box 复制 checkbox
    var defaultCopyAction = pospDataTable.button(1).action();
    pospDataTable.button(1).action(function (e, dt, button, config) {
        defaultCopyAction(e, dt, button, config);
        $('.dt-button-info').addClass('gritter-item-wrapper gritter-info gritter-center white');
    });


    var defaultColvisAction = pospDataTable.button(0).action();
    pospDataTable.button(0).action(function (e, dt, button, config) {
        defaultColvisAction(e, dt, button, config);


        if ($('.dt-button-collection > .dropdown-menu').length == 0) {
            $('.dt-button-collection')
                .wrapInner('<ul class="dropdown-menu dropdown-light dropdown-caret dropdown-caret" />')
                .find('a').attr('href', '#').wrap("<li />")
        }
        $('.dt-button-collection').appendTo('.tableTools-container .dt-buttons')
    });

    pospDataTable.on('select', function (e, dt, type, index) {
        if (type === 'row') {
            $(pospDataTable.row(index).node()).find('input:checkbox').prop('checked', true);
        }
    });
    pospDataTable.on('deselect', function (e, dt, type, index) {
        if (type === 'row') {
            $(pospDataTable.row(index).node()).find('input:checkbox').prop('checked', false);
        }
    });

    /////////////////////////////////
    //table checkboxes
    $('th input[type=checkbox], td input[type=checkbox]').prop('checked', false);

    //select/deselect all rows according to table header checkbox
    $('#dynamic-table > thead > tr > th input[type=checkbox], #dynamic-table_wrapper input[type=checkbox]').eq(0).on('click', function () {
        var th_checked = this.checked;//checkbox inside "TH" table header

        $('#dynamic-table').find('tbody > tr').each(function () {
            var row = this;
            if (th_checked) pospDataTable.row(row).select();
            else  pospDataTable.row(row).deselect();
        });
    });

    //select/deselect a row when the checkbox is checked/unchecked
    $('#dynamic-table').on('click', 'td input[type=checkbox]', function () {
        var row = $(this).closest('tr').get(0);
        if (this.checked) pospDataTable.row(row).deselect();
        else pospDataTable.row(row).select();
    });

    $('#dynamic-table').on('click', 'td input[type=button]', function () {
        //var row = $(this).closest('tr').get(0);
        //if (this.checked) pospDataTable.row(row).deselect();
        //else pospDataTable.row(row).select();
        alert("test")
    });

    //$(document).on('click', '#dynamic-table .dropdown-toggle', function (e) {
    //    e.stopImmediatePropagation();
    //    e.stopPropagation();
    //    e.preventDefault();
    //});

    /********************************/
    //add tooltip for small view action buttons in dropdown menu
    $('[data-rel="tooltip"]').tooltip({placement: tooltip_placement});

    //tooltip placement on right or left
    function tooltip_placement(context, source) {
        var $source = $(source);
        var $parent = $source.closest('table')
        var off1 = $parent.offset();
        var w1 = $parent.width();

        var off2 = $source.offset();
        //var w2 = $source.width();

        if (parseInt(off2.left) < parseInt(off1.left) + parseInt(w1 / 2)) return 'right';
        return 'left';
    }


// 通用的删除方法 Qiailin
//
    $("#btn-delete").bind("click",
        function () {
            var datas = pospDataTable.rows('.selected').data()
            var ids = [];
            var json_data = {};
            for (var i = 0; i < datas.length; i++) {
                ids.push(datas[i][0])
            }
            if (ids == 0) {
                var dialog = $("#dialog-message-null").removeClass('hide').dialog({
                    modal: true,
                    title: "操作提示：",
                    title_html: true,
                    buttons: [
                        {
                            text: "确定",
                            "class": "btn btn-primary btn-minier",
                            click: function () {
                                $(this).dialog("close");
                            }
                        }
                    ]
                });
            } else {
                json_data['ids'] = ids;
                var postdata = JSON.stringify(json_data);
                var dialog = $("#dialog-message").removeClass('hide').dialog({
                    modal: true,
                    title: "操作提示：" + "数据总共（" + datas.length + "）条",
                    title_html: true,
                    buttons: [
                        {
                            text: "取消",
                            "class": "btn btn-minier",
                            click: function () {
                                $(this).dialog("close");
                            }
                        },
                        {
                            text: "确定",
                            "class": "btn btn-primary btn-minier",
                            click: function () {
                                $(this).dialog("close");
                                $.ajax({
                                    type: "GET",
                                    url: "field/delete",
                                    data: {ids: postdata},
                                    dataType: "json",
                                    success: function (data) {
                                        //TODO Qiailin  修改删除 datatables 数据刷新问题
                                        pospDataTable.clearPipeline().draw();
                                    },
                                });
                            }
                        }
                    ]
                });
            }
        });



	function ajaxLoading(){
		//$("<div class=\"datagrid-mask\"></div>").css({display:"block",width:"100%",height:$(window).height()}).appendTo("#main-container");
		//$("<div class=\"datagrid-mask-msg\"></div>").html("正在处理，请稍候。。。").appendTo("#main-container").css({display:"block",left:($(document.body).outerWidth(true) - 190) / 2,top:($(window).height() - 45) / 2});
	}
	function ajaxLoadEnd(){
		//$(".datagrid-mask").remove();
		//$(".datagrid-mask-msg").remove();
	}
    function getSelectedFirstCol(colNum){
        var datas = pospDataTable.rows('.selected').data()
        var col = "";
        var json_data = {};
        for (var i = 0; i < datas.length; i++) {
            col = datas[i][colNum];
            break;
        }
        return col;
    }

    $("#btn-update").on('click', function (e) {
        e.preventDefault();
        var datas = pospDataTable.rows('.selected').data()
        //var update_id = 1;
        var ids = [];
        var json_data = {};
        for (var i = 0; i < datas.length; i++) {
            ids.push(datas[i][0])
            document.getElementById("id_resource_id1").value = datas[i][2];
            document.getElementById("id_field_name1").value = datas[i][3];
            document.getElementById("id_field_name_resolution1").value = datas[i][4];
            document.getElementById("id_search1").value = datas[i][10];
            document.getElementById("id_result1").value = datas[i][11];
            document.getElementById("id_modify1").value = datas[i][12];
            document.getElementById("id_add1").value = datas[i][13];
            document.getElementById("id_delete1").value = datas[i][14];
            i = datas.length

        }

        if (ids == 0) {
            var dialog = $("#dialog-message2").removeClass('hide').dialog({
                modal: true,
                title: "操作提示：数据未找到!",
                title_html: true,
                buttons: [
                    {
                        text: "确定",
                        "class": "btn btn-primary btn-minier",
                        click: function () {
                            $(this).dialog("close");
                        }
                    }
                ]
            });
        }
        else {
            var dialog = $("#dialog-message2").removeClass('hide').dialog({

                modal: true,
                //title: "",
                title_html: true,
                width: '760',
                buttons: [
                    {
                        text: "取消",
                        "class": "btn btn-minier",
                        click: function () {
                            $('#form_edit')[0].reset()
                            $(this).dialog("close");

                        }
                    },
                    {
                        text: "提交",
                        "class": "btn btn-primary btn-minier",
                        "id": "button_queren",
                        //"type": "submit",
                        click: function () {
                            document.getElementById("button_queren").disabled = true;
                            var data = new FormData();
                            data.append('id', datas[0][1]);
                            data.append('resource_id1', document.getElementById('id_resource_id1').value);
                            data.append('field_name1', document.getElementById('id_field_name1').value);
                            data.append('field_name_resolution1', document.getElementById('id_field_name_resolution1').value);
                            data.append('search1', document.getElementById('id_search1').value);
                            data.append('result1', document.getElementById('id_result1').value);
                            data.append('modify1', document.getElementById('id_modify1').value);
                            data.append('add1', document.getElementById('id_add1').value);
                            data.append('delete1', document.getElementById('id_delete1').value);

                            $.ajax({
                                type: 'POST',
                                url: "field/edit",
                                data: data,
                                dataType: "json",
                                processData: false,// 告诉jquery不转换数据
                                contentType: false,// 告诉jquery不设置内容格式
                                success: function (data) {
                                    document.getElementById("button_queren").disabled = false;
                                    if (data["code"] == '00') {
                                        $("#dialog-message2").dialog("close");
                                        document.getElementById("form_edit").reset();
                                        pospDataTable.clearPipeline().draw();
                                        var form_message = data['desc'];
                                        alert_dialog(form_message);
                                    }
                                    else {
                                        var form_errors = data['desc'];
                                        alert_dialog(form_errors);
                                    }
                                }
                            })
                            return false
                        }
                    }
                ]
            })
            $(".ui-dialog-title").html("<div class='widget-header widget-header-small'><h4 class='smaller'><i class='ace-icon fa fa-pencil'></i> 编辑</h4></div>");
        }
    });

    $("#btn-add").on('click', function (e) {
        //$("#btn-add").bind("click",function () {
        e.preventDefault();

        var dialog = $("#dialog-message1").removeClass('hide').dialog({


            modal: true,
            width: '760',
            create: function (event, ui) {
                //$(".ui-dialog-title").html("<div class='widget-header widget-header-small'><h4 class='smaller'><i class='ace-icon fa fa-plus'></i> 新建</h4></div>");
            },
            //title:"<div class='widget-header widget-header-small'><h4 class='smaller'><i class='ace-icon fa fa-plus'></i> 新建</h4></div>",
            //title_html: false,
            buttons: [
                {
                    text: "取消",
                    //"type": "reset",
                    "class": "btn btn-minier",
                    click: function () {
                        $('#form_add')[0].reset()
                        $(this).dialog("close");
                    }
                },
                {
                    text: "提交",
                    "class": "btn btn-primary btn-minier",
                    //"type": "submit",
                    click: function () {
                        //$(this).dialog("close");
                        //var data = $("#form_add").serialize();
                        var data = new FormData();
                        $.each($("#dialog-message1 #form_add").find("input[type='file']"), function(i, tag) {
                            $.each($(tag)[0].files, function(i, file) {
                                data.append(tag.name, file);
                            });
                        });
                        var params = $("#dialog-message1 #form_add").serializeArray();
                        $.each(params, function (i, val) {
                            data.append(val.name, val.value);
                        });
                        $.ajax({
                            type: 'POST',
                            url: "field/add",
                            data: data,
                            dataType: "json",
                            processData: false,  // 告诉jquery不转换数据
                            contentType: false,  // 告诉jquery不设置内容格式
                            success: function (data) {
                                //var obj_data = eval(data);
                                if (data["code"] == '00') {
                                    $("#dialog-message1").dialog("close");
                                    alert_dialog(data['desc']);
                                    pospDataTable.clearPipeline().draw();
                                    var form_message = data['desc'];
                                    alert_dialog(form_message);
                                }
                                else {
                                    var form_errors = data['desc'];
                                    alert_dialog(form_errors);
                                }

                            }
                        })
                        return false
                    }
                }
            ]
        });
        $(".ui-dialog-title").html("<div class='widget-header widget-header-small'><h4 class='smaller'><i class='ace-icon fa fa-plus'></i> 添加字段</h4></div>");
        $('#form_add')[0].reset();
    });

    // 右边的悬浮控件
    $(".ace-settings-btn").click(function () {
            if ($(".ace-settings-btn").attr("class").indexOf("open") > 0) {
                $(".ace-settings-btn").removeClass("open");
            } else {
                $(".ace-settings-btn").addClass("open");
            }
            if ($(".ace-settings-box").attr("class").indexOf("open") > 0) {
                $(".ace-settings-box").removeClass("open");
            } else {
                $(".ace-settings-box").addClass("open");
            }
        }
    );

    // 监听点击事件
    $("#btn-search").click(function () {
            var args1 = $("#in-search").val();
            //var args2 = $("#input2").val();
            //用空格隔开，达到多条件搜索的效果，相当于两个关键字
            pospDataTable.search(args1).draw();
            //table.search(args1+" "+args2).draw(false);//保留分页，排序状态
        }
    );

    //监听输入的回车事件
    //Qiailin
    $('#in-search').bind('keypress', function (event) {
        if (event.keyCode == "13") {
            pospDataTable.search($('#in-search').val()).draw();
        }
    });

    // 隐藏搜索
    // Qiailin
    $("#dynamic-table_filter").hide();

})
