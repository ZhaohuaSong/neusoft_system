#!/usr/bin/env python
# -*- coding: UTF-8 -*-

from __future__ import unicode_literals

from django.db import models

#########################报文管理数据库模型#########################
# Create your models here.
class Apps(models.Model):
    """
    应用程序管理
    """
    ACTIVE_CHOICE = (
        (1, u'正常使用'),
        (0, u'已停用'),
    )


    app_id   = models.CharField(max_length=64)
    app_name = models.CharField(max_length=255)
    app_ip   = models.CharField(max_length=255)
    app_port = models.IntegerField()
    app_state   = models.IntegerField(choices=ACTIVE_CHOICE)  #
    app_triggertype = models.IntegerField()  #
    create_by = models.CharField(max_length=255)
    create_date = models.DateTimeField(blank=True, null=True)
    update_date = models.DateTimeField(blank=True, null=True)
    remarks = models.CharField(max_length=255)

    class Meta:
        managed = False
        db_table = 'packmanage_apps'


class TriggerType(models.Model):
    """
    报文发送触发事件类型
    """
    trigger_id   = models.IntegerField()
    trigger_name = models.CharField(max_length=255)
    remarks = models.CharField(max_length=255)

    class Meta:
        managed = False
        db_table = 'packmanage_triggertype'

#########################协议管理数据库模型#########################

class ProtocolType(models.Model):
    """
    应用程序管理
    """
    SCR_CHOICE = (
        (1, u'CSV文件'),
        (0, u'数据库表'),
    )

    ACTIVE_CHOICE = (
        (1, u'正常使用'),
        (0, u'已停用'),
    )


    protocol_id   = models.CharField(max_length=64)
    protocol_name = models.CharField(max_length=255)
    protocol_state= models.IntegerField(choices=ACTIVE_CHOICE)  #
    protocol_srctype = models.IntegerField(choices=SCR_CHOICE)  #
    protocol_content = models.TextField()
    create_by = models.CharField(max_length=255)
    create_date = models.DateTimeField(blank=True, null=True)
    update_date = models.DateTimeField(blank=True, null=True)
    remarks = models.CharField(max_length=255)

    class Meta:
        managed = False
        db_table = 'packmanage_protocoltype'
